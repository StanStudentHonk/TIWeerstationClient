// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/weatherRequest.proto

package proto.weather;

/**
 * <pre>
 * The request message containing the user's name.
 * </pre>
 *
 * Protobuf type {@code ProtoWeatherDataPoint}
 */
public final class ProtoWeatherDataPoint extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:ProtoWeatherDataPoint)
    ProtoWeatherDataPointOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ProtoWeatherDataPoint.newBuilder() to construct.
  private ProtoWeatherDataPoint(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ProtoWeatherDataPoint() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new ProtoWeatherDataPoint();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ProtoWeatherDataPoint(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            avgWindSpeed_ = input.readInt32();
            break;
          }
          case 16: {

            barometer_ = input.readInt32();
            break;
          }
          case 24: {

            battLevel_ = input.readInt32();
            break;
          }
          case 32: {

            insideHum_ = input.readInt32();
            break;
          }
          case 40: {

            insideTemp_ = input.readInt32();
            break;
          }
          case 48: {

            outsideHum_ = input.readInt32();
            break;
          }
          case 56: {

            outsideTemp_ = input.readInt32();
            break;
          }
          case 64: {

            rainRate_ = input.readInt32();
            break;
          }
          case 72: {

            solarRad_ = input.readInt32();
            break;
          }
          case 82: {
            proto.weather.ProtoWeatherStation.Builder subBuilder = null;
            if (station_ != null) {
              subBuilder = station_.toBuilder();
            }
            station_ = input.readMessage(proto.weather.ProtoWeatherStation.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(station_);
              station_ = subBuilder.buildPartial();
            }

            break;
          }
          case 88: {

            sunrise_ = input.readInt32();
            break;
          }
          case 96: {

            sunset_ = input.readInt32();
            break;
          }
          case 106: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (timestamp_ != null) {
              subBuilder = timestamp_.toBuilder();
            }
            timestamp_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(timestamp_);
              timestamp_ = subBuilder.buildPartial();
            }

            break;
          }
          case 112: {

            ts_ = input.readInt32();
            break;
          }
          case 120: {

            uVLevel_ = input.readInt32();
            break;
          }
          case 128: {

            windSpeed_ = input.readInt32();
            break;
          }
          case 136: {

            windDir_ = input.readInt32();
            break;
          }
          case 144: {

            xmitBatt_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return proto.weather.WeatherRequest.internal_static_ProtoWeatherDataPoint_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return proto.weather.WeatherRequest.internal_static_ProtoWeatherDataPoint_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            proto.weather.ProtoWeatherDataPoint.class, proto.weather.ProtoWeatherDataPoint.Builder.class);
  }

  public static final int AVGWINDSPEED_FIELD_NUMBER = 1;
  private int avgWindSpeed_;
  /**
   * <code>int32 avgWindSpeed = 1;</code>
   * @return The avgWindSpeed.
   */
  @java.lang.Override
  public int getAvgWindSpeed() {
    return avgWindSpeed_;
  }

  public static final int BAROMETER_FIELD_NUMBER = 2;
  private int barometer_;
  /**
   * <code>int32 barometer = 2;</code>
   * @return The barometer.
   */
  @java.lang.Override
  public int getBarometer() {
    return barometer_;
  }

  public static final int BATTLEVEL_FIELD_NUMBER = 3;
  private int battLevel_;
  /**
   * <code>int32 battLevel = 3;</code>
   * @return The battLevel.
   */
  @java.lang.Override
  public int getBattLevel() {
    return battLevel_;
  }

  public static final int INSIDEHUM_FIELD_NUMBER = 4;
  private int insideHum_;
  /**
   * <code>int32 insideHum = 4;</code>
   * @return The insideHum.
   */
  @java.lang.Override
  public int getInsideHum() {
    return insideHum_;
  }

  public static final int INSIDETEMP_FIELD_NUMBER = 5;
  private int insideTemp_;
  /**
   * <code>int32 insideTemp = 5;</code>
   * @return The insideTemp.
   */
  @java.lang.Override
  public int getInsideTemp() {
    return insideTemp_;
  }

  public static final int OUTSIDEHUM_FIELD_NUMBER = 6;
  private int outsideHum_;
  /**
   * <code>int32 outsideHum = 6;</code>
   * @return The outsideHum.
   */
  @java.lang.Override
  public int getOutsideHum() {
    return outsideHum_;
  }

  public static final int OUTSIDETEMP_FIELD_NUMBER = 7;
  private int outsideTemp_;
  /**
   * <code>int32 outsideTemp = 7;</code>
   * @return The outsideTemp.
   */
  @java.lang.Override
  public int getOutsideTemp() {
    return outsideTemp_;
  }

  public static final int RAINRATE_FIELD_NUMBER = 8;
  private int rainRate_;
  /**
   * <code>int32 rainRate = 8;</code>
   * @return The rainRate.
   */
  @java.lang.Override
  public int getRainRate() {
    return rainRate_;
  }

  public static final int SOLARRAD_FIELD_NUMBER = 9;
  private int solarRad_;
  /**
   * <code>int32 solarRad = 9;</code>
   * @return The solarRad.
   */
  @java.lang.Override
  public int getSolarRad() {
    return solarRad_;
  }

  public static final int STATION_FIELD_NUMBER = 10;
  private proto.weather.ProtoWeatherStation station_;
  /**
   * <code>.ProtoWeatherStation station = 10;</code>
   * @return Whether the station field is set.
   */
  @java.lang.Override
  public boolean hasStation() {
    return station_ != null;
  }
  /**
   * <code>.ProtoWeatherStation station = 10;</code>
   * @return The station.
   */
  @java.lang.Override
  public proto.weather.ProtoWeatherStation getStation() {
    return station_ == null ? proto.weather.ProtoWeatherStation.getDefaultInstance() : station_;
  }
  /**
   * <code>.ProtoWeatherStation station = 10;</code>
   */
  @java.lang.Override
  public proto.weather.ProtoWeatherStationOrBuilder getStationOrBuilder() {
    return getStation();
  }

  public static final int SUNRISE_FIELD_NUMBER = 11;
  private int sunrise_;
  /**
   * <code>int32 sunrise = 11;</code>
   * @return The sunrise.
   */
  @java.lang.Override
  public int getSunrise() {
    return sunrise_;
  }

  public static final int SUNSET_FIELD_NUMBER = 12;
  private int sunset_;
  /**
   * <code>int32 sunset = 12;</code>
   * @return The sunset.
   */
  @java.lang.Override
  public int getSunset() {
    return sunset_;
  }

  public static final int TIMESTAMP_FIELD_NUMBER = 13;
  private com.google.protobuf.Timestamp timestamp_;
  /**
   * <code>.google.protobuf.Timestamp timestamp = 13;</code>
   * @return Whether the timestamp field is set.
   */
  @java.lang.Override
  public boolean hasTimestamp() {
    return timestamp_ != null;
  }
  /**
   * <code>.google.protobuf.Timestamp timestamp = 13;</code>
   * @return The timestamp.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getTimestamp() {
    return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
  }
  /**
   * <code>.google.protobuf.Timestamp timestamp = 13;</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
    return getTimestamp();
  }

  public static final int TS_FIELD_NUMBER = 14;
  private int ts_;
  /**
   * <code>int32 ts = 14;</code>
   * @return The ts.
   */
  @java.lang.Override
  public int getTs() {
    return ts_;
  }

  public static final int UVLEVEL_FIELD_NUMBER = 15;
  private int uVLevel_;
  /**
   * <code>int32 UVLevel = 15;</code>
   * @return The uVLevel.
   */
  @java.lang.Override
  public int getUVLevel() {
    return uVLevel_;
  }

  public static final int WINDSPEED_FIELD_NUMBER = 16;
  private int windSpeed_;
  /**
   * <code>int32 windSpeed = 16;</code>
   * @return The windSpeed.
   */
  @java.lang.Override
  public int getWindSpeed() {
    return windSpeed_;
  }

  public static final int WINDDIR_FIELD_NUMBER = 17;
  private int windDir_;
  /**
   * <code>int32 windDir = 17;</code>
   * @return The windDir.
   */
  @java.lang.Override
  public int getWindDir() {
    return windDir_;
  }

  public static final int XMITBATT_FIELD_NUMBER = 18;
  private int xmitBatt_;
  /**
   * <code>int32 xmitBatt = 18;</code>
   * @return The xmitBatt.
   */
  @java.lang.Override
  public int getXmitBatt() {
    return xmitBatt_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (avgWindSpeed_ != 0) {
      output.writeInt32(1, avgWindSpeed_);
    }
    if (barometer_ != 0) {
      output.writeInt32(2, barometer_);
    }
    if (battLevel_ != 0) {
      output.writeInt32(3, battLevel_);
    }
    if (insideHum_ != 0) {
      output.writeInt32(4, insideHum_);
    }
    if (insideTemp_ != 0) {
      output.writeInt32(5, insideTemp_);
    }
    if (outsideHum_ != 0) {
      output.writeInt32(6, outsideHum_);
    }
    if (outsideTemp_ != 0) {
      output.writeInt32(7, outsideTemp_);
    }
    if (rainRate_ != 0) {
      output.writeInt32(8, rainRate_);
    }
    if (solarRad_ != 0) {
      output.writeInt32(9, solarRad_);
    }
    if (station_ != null) {
      output.writeMessage(10, getStation());
    }
    if (sunrise_ != 0) {
      output.writeInt32(11, sunrise_);
    }
    if (sunset_ != 0) {
      output.writeInt32(12, sunset_);
    }
    if (timestamp_ != null) {
      output.writeMessage(13, getTimestamp());
    }
    if (ts_ != 0) {
      output.writeInt32(14, ts_);
    }
    if (uVLevel_ != 0) {
      output.writeInt32(15, uVLevel_);
    }
    if (windSpeed_ != 0) {
      output.writeInt32(16, windSpeed_);
    }
    if (windDir_ != 0) {
      output.writeInt32(17, windDir_);
    }
    if (xmitBatt_ != 0) {
      output.writeInt32(18, xmitBatt_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (avgWindSpeed_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, avgWindSpeed_);
    }
    if (barometer_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, barometer_);
    }
    if (battLevel_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, battLevel_);
    }
    if (insideHum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, insideHum_);
    }
    if (insideTemp_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, insideTemp_);
    }
    if (outsideHum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, outsideHum_);
    }
    if (outsideTemp_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, outsideTemp_);
    }
    if (rainRate_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, rainRate_);
    }
    if (solarRad_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(9, solarRad_);
    }
    if (station_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, getStation());
    }
    if (sunrise_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(11, sunrise_);
    }
    if (sunset_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(12, sunset_);
    }
    if (timestamp_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, getTimestamp());
    }
    if (ts_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(14, ts_);
    }
    if (uVLevel_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(15, uVLevel_);
    }
    if (windSpeed_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(16, windSpeed_);
    }
    if (windDir_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(17, windDir_);
    }
    if (xmitBatt_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(18, xmitBatt_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof proto.weather.ProtoWeatherDataPoint)) {
      return super.equals(obj);
    }
    proto.weather.ProtoWeatherDataPoint other = (proto.weather.ProtoWeatherDataPoint) obj;

    if (getAvgWindSpeed()
        != other.getAvgWindSpeed()) return false;
    if (getBarometer()
        != other.getBarometer()) return false;
    if (getBattLevel()
        != other.getBattLevel()) return false;
    if (getInsideHum()
        != other.getInsideHum()) return false;
    if (getInsideTemp()
        != other.getInsideTemp()) return false;
    if (getOutsideHum()
        != other.getOutsideHum()) return false;
    if (getOutsideTemp()
        != other.getOutsideTemp()) return false;
    if (getRainRate()
        != other.getRainRate()) return false;
    if (getSolarRad()
        != other.getSolarRad()) return false;
    if (hasStation() != other.hasStation()) return false;
    if (hasStation()) {
      if (!getStation()
          .equals(other.getStation())) return false;
    }
    if (getSunrise()
        != other.getSunrise()) return false;
    if (getSunset()
        != other.getSunset()) return false;
    if (hasTimestamp() != other.hasTimestamp()) return false;
    if (hasTimestamp()) {
      if (!getTimestamp()
          .equals(other.getTimestamp())) return false;
    }
    if (getTs()
        != other.getTs()) return false;
    if (getUVLevel()
        != other.getUVLevel()) return false;
    if (getWindSpeed()
        != other.getWindSpeed()) return false;
    if (getWindDir()
        != other.getWindDir()) return false;
    if (getXmitBatt()
        != other.getXmitBatt()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + AVGWINDSPEED_FIELD_NUMBER;
    hash = (53 * hash) + getAvgWindSpeed();
    hash = (37 * hash) + BAROMETER_FIELD_NUMBER;
    hash = (53 * hash) + getBarometer();
    hash = (37 * hash) + BATTLEVEL_FIELD_NUMBER;
    hash = (53 * hash) + getBattLevel();
    hash = (37 * hash) + INSIDEHUM_FIELD_NUMBER;
    hash = (53 * hash) + getInsideHum();
    hash = (37 * hash) + INSIDETEMP_FIELD_NUMBER;
    hash = (53 * hash) + getInsideTemp();
    hash = (37 * hash) + OUTSIDEHUM_FIELD_NUMBER;
    hash = (53 * hash) + getOutsideHum();
    hash = (37 * hash) + OUTSIDETEMP_FIELD_NUMBER;
    hash = (53 * hash) + getOutsideTemp();
    hash = (37 * hash) + RAINRATE_FIELD_NUMBER;
    hash = (53 * hash) + getRainRate();
    hash = (37 * hash) + SOLARRAD_FIELD_NUMBER;
    hash = (53 * hash) + getSolarRad();
    if (hasStation()) {
      hash = (37 * hash) + STATION_FIELD_NUMBER;
      hash = (53 * hash) + getStation().hashCode();
    }
    hash = (37 * hash) + SUNRISE_FIELD_NUMBER;
    hash = (53 * hash) + getSunrise();
    hash = (37 * hash) + SUNSET_FIELD_NUMBER;
    hash = (53 * hash) + getSunset();
    if (hasTimestamp()) {
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + getTimestamp().hashCode();
    }
    hash = (37 * hash) + TS_FIELD_NUMBER;
    hash = (53 * hash) + getTs();
    hash = (37 * hash) + UVLEVEL_FIELD_NUMBER;
    hash = (53 * hash) + getUVLevel();
    hash = (37 * hash) + WINDSPEED_FIELD_NUMBER;
    hash = (53 * hash) + getWindSpeed();
    hash = (37 * hash) + WINDDIR_FIELD_NUMBER;
    hash = (53 * hash) + getWindDir();
    hash = (37 * hash) + XMITBATT_FIELD_NUMBER;
    hash = (53 * hash) + getXmitBatt();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static proto.weather.ProtoWeatherDataPoint parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static proto.weather.ProtoWeatherDataPoint parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static proto.weather.ProtoWeatherDataPoint parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static proto.weather.ProtoWeatherDataPoint parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static proto.weather.ProtoWeatherDataPoint parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static proto.weather.ProtoWeatherDataPoint parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static proto.weather.ProtoWeatherDataPoint parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static proto.weather.ProtoWeatherDataPoint parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static proto.weather.ProtoWeatherDataPoint parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static proto.weather.ProtoWeatherDataPoint parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static proto.weather.ProtoWeatherDataPoint parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static proto.weather.ProtoWeatherDataPoint parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(proto.weather.ProtoWeatherDataPoint prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The request message containing the user's name.
   * </pre>
   *
   * Protobuf type {@code ProtoWeatherDataPoint}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ProtoWeatherDataPoint)
      proto.weather.ProtoWeatherDataPointOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.weather.WeatherRequest.internal_static_ProtoWeatherDataPoint_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.weather.WeatherRequest.internal_static_ProtoWeatherDataPoint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.weather.ProtoWeatherDataPoint.class, proto.weather.ProtoWeatherDataPoint.Builder.class);
    }

    // Construct using proto.weather.ProtoWeatherDataPoint.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      avgWindSpeed_ = 0;

      barometer_ = 0;

      battLevel_ = 0;

      insideHum_ = 0;

      insideTemp_ = 0;

      outsideHum_ = 0;

      outsideTemp_ = 0;

      rainRate_ = 0;

      solarRad_ = 0;

      if (stationBuilder_ == null) {
        station_ = null;
      } else {
        station_ = null;
        stationBuilder_ = null;
      }
      sunrise_ = 0;

      sunset_ = 0;

      if (timestampBuilder_ == null) {
        timestamp_ = null;
      } else {
        timestamp_ = null;
        timestampBuilder_ = null;
      }
      ts_ = 0;

      uVLevel_ = 0;

      windSpeed_ = 0;

      windDir_ = 0;

      xmitBatt_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return proto.weather.WeatherRequest.internal_static_ProtoWeatherDataPoint_descriptor;
    }

    @java.lang.Override
    public proto.weather.ProtoWeatherDataPoint getDefaultInstanceForType() {
      return proto.weather.ProtoWeatherDataPoint.getDefaultInstance();
    }

    @java.lang.Override
    public proto.weather.ProtoWeatherDataPoint build() {
      proto.weather.ProtoWeatherDataPoint result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public proto.weather.ProtoWeatherDataPoint buildPartial() {
      proto.weather.ProtoWeatherDataPoint result = new proto.weather.ProtoWeatherDataPoint(this);
      result.avgWindSpeed_ = avgWindSpeed_;
      result.barometer_ = barometer_;
      result.battLevel_ = battLevel_;
      result.insideHum_ = insideHum_;
      result.insideTemp_ = insideTemp_;
      result.outsideHum_ = outsideHum_;
      result.outsideTemp_ = outsideTemp_;
      result.rainRate_ = rainRate_;
      result.solarRad_ = solarRad_;
      if (stationBuilder_ == null) {
        result.station_ = station_;
      } else {
        result.station_ = stationBuilder_.build();
      }
      result.sunrise_ = sunrise_;
      result.sunset_ = sunset_;
      if (timestampBuilder_ == null) {
        result.timestamp_ = timestamp_;
      } else {
        result.timestamp_ = timestampBuilder_.build();
      }
      result.ts_ = ts_;
      result.uVLevel_ = uVLevel_;
      result.windSpeed_ = windSpeed_;
      result.windDir_ = windDir_;
      result.xmitBatt_ = xmitBatt_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof proto.weather.ProtoWeatherDataPoint) {
        return mergeFrom((proto.weather.ProtoWeatherDataPoint)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(proto.weather.ProtoWeatherDataPoint other) {
      if (other == proto.weather.ProtoWeatherDataPoint.getDefaultInstance()) return this;
      if (other.getAvgWindSpeed() != 0) {
        setAvgWindSpeed(other.getAvgWindSpeed());
      }
      if (other.getBarometer() != 0) {
        setBarometer(other.getBarometer());
      }
      if (other.getBattLevel() != 0) {
        setBattLevel(other.getBattLevel());
      }
      if (other.getInsideHum() != 0) {
        setInsideHum(other.getInsideHum());
      }
      if (other.getInsideTemp() != 0) {
        setInsideTemp(other.getInsideTemp());
      }
      if (other.getOutsideHum() != 0) {
        setOutsideHum(other.getOutsideHum());
      }
      if (other.getOutsideTemp() != 0) {
        setOutsideTemp(other.getOutsideTemp());
      }
      if (other.getRainRate() != 0) {
        setRainRate(other.getRainRate());
      }
      if (other.getSolarRad() != 0) {
        setSolarRad(other.getSolarRad());
      }
      if (other.hasStation()) {
        mergeStation(other.getStation());
      }
      if (other.getSunrise() != 0) {
        setSunrise(other.getSunrise());
      }
      if (other.getSunset() != 0) {
        setSunset(other.getSunset());
      }
      if (other.hasTimestamp()) {
        mergeTimestamp(other.getTimestamp());
      }
      if (other.getTs() != 0) {
        setTs(other.getTs());
      }
      if (other.getUVLevel() != 0) {
        setUVLevel(other.getUVLevel());
      }
      if (other.getWindSpeed() != 0) {
        setWindSpeed(other.getWindSpeed());
      }
      if (other.getWindDir() != 0) {
        setWindDir(other.getWindDir());
      }
      if (other.getXmitBatt() != 0) {
        setXmitBatt(other.getXmitBatt());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      proto.weather.ProtoWeatherDataPoint parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (proto.weather.ProtoWeatherDataPoint) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int avgWindSpeed_ ;
    /**
     * <code>int32 avgWindSpeed = 1;</code>
     * @return The avgWindSpeed.
     */
    @java.lang.Override
    public int getAvgWindSpeed() {
      return avgWindSpeed_;
    }
    /**
     * <code>int32 avgWindSpeed = 1;</code>
     * @param value The avgWindSpeed to set.
     * @return This builder for chaining.
     */
    public Builder setAvgWindSpeed(int value) {
      
      avgWindSpeed_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 avgWindSpeed = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearAvgWindSpeed() {
      
      avgWindSpeed_ = 0;
      onChanged();
      return this;
    }

    private int barometer_ ;
    /**
     * <code>int32 barometer = 2;</code>
     * @return The barometer.
     */
    @java.lang.Override
    public int getBarometer() {
      return barometer_;
    }
    /**
     * <code>int32 barometer = 2;</code>
     * @param value The barometer to set.
     * @return This builder for chaining.
     */
    public Builder setBarometer(int value) {
      
      barometer_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 barometer = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearBarometer() {
      
      barometer_ = 0;
      onChanged();
      return this;
    }

    private int battLevel_ ;
    /**
     * <code>int32 battLevel = 3;</code>
     * @return The battLevel.
     */
    @java.lang.Override
    public int getBattLevel() {
      return battLevel_;
    }
    /**
     * <code>int32 battLevel = 3;</code>
     * @param value The battLevel to set.
     * @return This builder for chaining.
     */
    public Builder setBattLevel(int value) {
      
      battLevel_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 battLevel = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearBattLevel() {
      
      battLevel_ = 0;
      onChanged();
      return this;
    }

    private int insideHum_ ;
    /**
     * <code>int32 insideHum = 4;</code>
     * @return The insideHum.
     */
    @java.lang.Override
    public int getInsideHum() {
      return insideHum_;
    }
    /**
     * <code>int32 insideHum = 4;</code>
     * @param value The insideHum to set.
     * @return This builder for chaining.
     */
    public Builder setInsideHum(int value) {
      
      insideHum_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 insideHum = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearInsideHum() {
      
      insideHum_ = 0;
      onChanged();
      return this;
    }

    private int insideTemp_ ;
    /**
     * <code>int32 insideTemp = 5;</code>
     * @return The insideTemp.
     */
    @java.lang.Override
    public int getInsideTemp() {
      return insideTemp_;
    }
    /**
     * <code>int32 insideTemp = 5;</code>
     * @param value The insideTemp to set.
     * @return This builder for chaining.
     */
    public Builder setInsideTemp(int value) {
      
      insideTemp_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 insideTemp = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearInsideTemp() {
      
      insideTemp_ = 0;
      onChanged();
      return this;
    }

    private int outsideHum_ ;
    /**
     * <code>int32 outsideHum = 6;</code>
     * @return The outsideHum.
     */
    @java.lang.Override
    public int getOutsideHum() {
      return outsideHum_;
    }
    /**
     * <code>int32 outsideHum = 6;</code>
     * @param value The outsideHum to set.
     * @return This builder for chaining.
     */
    public Builder setOutsideHum(int value) {
      
      outsideHum_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 outsideHum = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearOutsideHum() {
      
      outsideHum_ = 0;
      onChanged();
      return this;
    }

    private int outsideTemp_ ;
    /**
     * <code>int32 outsideTemp = 7;</code>
     * @return The outsideTemp.
     */
    @java.lang.Override
    public int getOutsideTemp() {
      return outsideTemp_;
    }
    /**
     * <code>int32 outsideTemp = 7;</code>
     * @param value The outsideTemp to set.
     * @return This builder for chaining.
     */
    public Builder setOutsideTemp(int value) {
      
      outsideTemp_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 outsideTemp = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearOutsideTemp() {
      
      outsideTemp_ = 0;
      onChanged();
      return this;
    }

    private int rainRate_ ;
    /**
     * <code>int32 rainRate = 8;</code>
     * @return The rainRate.
     */
    @java.lang.Override
    public int getRainRate() {
      return rainRate_;
    }
    /**
     * <code>int32 rainRate = 8;</code>
     * @param value The rainRate to set.
     * @return This builder for chaining.
     */
    public Builder setRainRate(int value) {
      
      rainRate_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 rainRate = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearRainRate() {
      
      rainRate_ = 0;
      onChanged();
      return this;
    }

    private int solarRad_ ;
    /**
     * <code>int32 solarRad = 9;</code>
     * @return The solarRad.
     */
    @java.lang.Override
    public int getSolarRad() {
      return solarRad_;
    }
    /**
     * <code>int32 solarRad = 9;</code>
     * @param value The solarRad to set.
     * @return This builder for chaining.
     */
    public Builder setSolarRad(int value) {
      
      solarRad_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 solarRad = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearSolarRad() {
      
      solarRad_ = 0;
      onChanged();
      return this;
    }

    private proto.weather.ProtoWeatherStation station_;
    private com.google.protobuf.SingleFieldBuilderV3<
        proto.weather.ProtoWeatherStation, proto.weather.ProtoWeatherStation.Builder, proto.weather.ProtoWeatherStationOrBuilder> stationBuilder_;
    /**
     * <code>.ProtoWeatherStation station = 10;</code>
     * @return Whether the station field is set.
     */
    public boolean hasStation() {
      return stationBuilder_ != null || station_ != null;
    }
    /**
     * <code>.ProtoWeatherStation station = 10;</code>
     * @return The station.
     */
    public proto.weather.ProtoWeatherStation getStation() {
      if (stationBuilder_ == null) {
        return station_ == null ? proto.weather.ProtoWeatherStation.getDefaultInstance() : station_;
      } else {
        return stationBuilder_.getMessage();
      }
    }
    /**
     * <code>.ProtoWeatherStation station = 10;</code>
     */
    public Builder setStation(proto.weather.ProtoWeatherStation value) {
      if (stationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        station_ = value;
        onChanged();
      } else {
        stationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.ProtoWeatherStation station = 10;</code>
     */
    public Builder setStation(
        proto.weather.ProtoWeatherStation.Builder builderForValue) {
      if (stationBuilder_ == null) {
        station_ = builderForValue.build();
        onChanged();
      } else {
        stationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.ProtoWeatherStation station = 10;</code>
     */
    public Builder mergeStation(proto.weather.ProtoWeatherStation value) {
      if (stationBuilder_ == null) {
        if (station_ != null) {
          station_ =
            proto.weather.ProtoWeatherStation.newBuilder(station_).mergeFrom(value).buildPartial();
        } else {
          station_ = value;
        }
        onChanged();
      } else {
        stationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.ProtoWeatherStation station = 10;</code>
     */
    public Builder clearStation() {
      if (stationBuilder_ == null) {
        station_ = null;
        onChanged();
      } else {
        station_ = null;
        stationBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.ProtoWeatherStation station = 10;</code>
     */
    public proto.weather.ProtoWeatherStation.Builder getStationBuilder() {
      
      onChanged();
      return getStationFieldBuilder().getBuilder();
    }
    /**
     * <code>.ProtoWeatherStation station = 10;</code>
     */
    public proto.weather.ProtoWeatherStationOrBuilder getStationOrBuilder() {
      if (stationBuilder_ != null) {
        return stationBuilder_.getMessageOrBuilder();
      } else {
        return station_ == null ?
            proto.weather.ProtoWeatherStation.getDefaultInstance() : station_;
      }
    }
    /**
     * <code>.ProtoWeatherStation station = 10;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        proto.weather.ProtoWeatherStation, proto.weather.ProtoWeatherStation.Builder, proto.weather.ProtoWeatherStationOrBuilder> 
        getStationFieldBuilder() {
      if (stationBuilder_ == null) {
        stationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            proto.weather.ProtoWeatherStation, proto.weather.ProtoWeatherStation.Builder, proto.weather.ProtoWeatherStationOrBuilder>(
                getStation(),
                getParentForChildren(),
                isClean());
        station_ = null;
      }
      return stationBuilder_;
    }

    private int sunrise_ ;
    /**
     * <code>int32 sunrise = 11;</code>
     * @return The sunrise.
     */
    @java.lang.Override
    public int getSunrise() {
      return sunrise_;
    }
    /**
     * <code>int32 sunrise = 11;</code>
     * @param value The sunrise to set.
     * @return This builder for chaining.
     */
    public Builder setSunrise(int value) {
      
      sunrise_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 sunrise = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearSunrise() {
      
      sunrise_ = 0;
      onChanged();
      return this;
    }

    private int sunset_ ;
    /**
     * <code>int32 sunset = 12;</code>
     * @return The sunset.
     */
    @java.lang.Override
    public int getSunset() {
      return sunset_;
    }
    /**
     * <code>int32 sunset = 12;</code>
     * @param value The sunset to set.
     * @return This builder for chaining.
     */
    public Builder setSunset(int value) {
      
      sunset_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 sunset = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearSunset() {
      
      sunset_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.Timestamp timestamp_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> timestampBuilder_;
    /**
     * <code>.google.protobuf.Timestamp timestamp = 13;</code>
     * @return Whether the timestamp field is set.
     */
    public boolean hasTimestamp() {
      return timestampBuilder_ != null || timestamp_ != null;
    }
    /**
     * <code>.google.protobuf.Timestamp timestamp = 13;</code>
     * @return The timestamp.
     */
    public com.google.protobuf.Timestamp getTimestamp() {
      if (timestampBuilder_ == null) {
        return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
      } else {
        return timestampBuilder_.getMessage();
      }
    }
    /**
     * <code>.google.protobuf.Timestamp timestamp = 13;</code>
     */
    public Builder setTimestamp(com.google.protobuf.Timestamp value) {
      if (timestampBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        timestamp_ = value;
        onChanged();
      } else {
        timestampBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.google.protobuf.Timestamp timestamp = 13;</code>
     */
    public Builder setTimestamp(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (timestampBuilder_ == null) {
        timestamp_ = builderForValue.build();
        onChanged();
      } else {
        timestampBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.google.protobuf.Timestamp timestamp = 13;</code>
     */
    public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
      if (timestampBuilder_ == null) {
        if (timestamp_ != null) {
          timestamp_ =
            com.google.protobuf.Timestamp.newBuilder(timestamp_).mergeFrom(value).buildPartial();
        } else {
          timestamp_ = value;
        }
        onChanged();
      } else {
        timestampBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.google.protobuf.Timestamp timestamp = 13;</code>
     */
    public Builder clearTimestamp() {
      if (timestampBuilder_ == null) {
        timestamp_ = null;
        onChanged();
      } else {
        timestamp_ = null;
        timestampBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.google.protobuf.Timestamp timestamp = 13;</code>
     */
    public com.google.protobuf.Timestamp.Builder getTimestampBuilder() {
      
      onChanged();
      return getTimestampFieldBuilder().getBuilder();
    }
    /**
     * <code>.google.protobuf.Timestamp timestamp = 13;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder() {
      if (timestampBuilder_ != null) {
        return timestampBuilder_.getMessageOrBuilder();
      } else {
        return timestamp_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
      }
    }
    /**
     * <code>.google.protobuf.Timestamp timestamp = 13;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getTimestampFieldBuilder() {
      if (timestampBuilder_ == null) {
        timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getTimestamp(),
                getParentForChildren(),
                isClean());
        timestamp_ = null;
      }
      return timestampBuilder_;
    }

    private int ts_ ;
    /**
     * <code>int32 ts = 14;</code>
     * @return The ts.
     */
    @java.lang.Override
    public int getTs() {
      return ts_;
    }
    /**
     * <code>int32 ts = 14;</code>
     * @param value The ts to set.
     * @return This builder for chaining.
     */
    public Builder setTs(int value) {
      
      ts_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 ts = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearTs() {
      
      ts_ = 0;
      onChanged();
      return this;
    }

    private int uVLevel_ ;
    /**
     * <code>int32 UVLevel = 15;</code>
     * @return The uVLevel.
     */
    @java.lang.Override
    public int getUVLevel() {
      return uVLevel_;
    }
    /**
     * <code>int32 UVLevel = 15;</code>
     * @param value The uVLevel to set.
     * @return This builder for chaining.
     */
    public Builder setUVLevel(int value) {
      
      uVLevel_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 UVLevel = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearUVLevel() {
      
      uVLevel_ = 0;
      onChanged();
      return this;
    }

    private int windSpeed_ ;
    /**
     * <code>int32 windSpeed = 16;</code>
     * @return The windSpeed.
     */
    @java.lang.Override
    public int getWindSpeed() {
      return windSpeed_;
    }
    /**
     * <code>int32 windSpeed = 16;</code>
     * @param value The windSpeed to set.
     * @return This builder for chaining.
     */
    public Builder setWindSpeed(int value) {
      
      windSpeed_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 windSpeed = 16;</code>
     * @return This builder for chaining.
     */
    public Builder clearWindSpeed() {
      
      windSpeed_ = 0;
      onChanged();
      return this;
    }

    private int windDir_ ;
    /**
     * <code>int32 windDir = 17;</code>
     * @return The windDir.
     */
    @java.lang.Override
    public int getWindDir() {
      return windDir_;
    }
    /**
     * <code>int32 windDir = 17;</code>
     * @param value The windDir to set.
     * @return This builder for chaining.
     */
    public Builder setWindDir(int value) {
      
      windDir_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 windDir = 17;</code>
     * @return This builder for chaining.
     */
    public Builder clearWindDir() {
      
      windDir_ = 0;
      onChanged();
      return this;
    }

    private int xmitBatt_ ;
    /**
     * <code>int32 xmitBatt = 18;</code>
     * @return The xmitBatt.
     */
    @java.lang.Override
    public int getXmitBatt() {
      return xmitBatt_;
    }
    /**
     * <code>int32 xmitBatt = 18;</code>
     * @param value The xmitBatt to set.
     * @return This builder for chaining.
     */
    public Builder setXmitBatt(int value) {
      
      xmitBatt_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 xmitBatt = 18;</code>
     * @return This builder for chaining.
     */
    public Builder clearXmitBatt() {
      
      xmitBatt_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:ProtoWeatherDataPoint)
  }

  // @@protoc_insertion_point(class_scope:ProtoWeatherDataPoint)
  private static final proto.weather.ProtoWeatherDataPoint DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new proto.weather.ProtoWeatherDataPoint();
  }

  public static proto.weather.ProtoWeatherDataPoint getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ProtoWeatherDataPoint>
      PARSER = new com.google.protobuf.AbstractParser<ProtoWeatherDataPoint>() {
    @java.lang.Override
    public ProtoWeatherDataPoint parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ProtoWeatherDataPoint(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ProtoWeatherDataPoint> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ProtoWeatherDataPoint> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public proto.weather.ProtoWeatherDataPoint getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

